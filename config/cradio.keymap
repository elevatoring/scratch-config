// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <dt-bindings/zmk/reset.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 900  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10   // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_lss {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&sk LSHFT>;
            layers = <0>;
        };

        combo_las {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&sk LALT>;
            layers = <0>;
        };

        combo_lcs {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&sk LCTRL>;
            layers = <0>;
        };

        combo_lgs {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&sk LGUI>;
            layers = <0>;
        };

        combo_rss {
            timeout-ms = <50>;
            key-positions = <19 18>;
            bindings = <&sk RSHFT>;
            layers = <0>;
        };

        combo_ras {
            timeout-ms = <50>;
            key-positions = <18 17>;
            bindings = <&sk RALT>;
            layers = <0>;
        };

        combo_rcs {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&sk RCTRL>;
            layers = <0>;
        };

        combo_rgs {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&sk RGUI>;
            layers = <0>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_ls {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp LSHFT>;
            layers = <1 2>;
        };

        combo_la {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
            layers = <1 2>;
        };

        combo_lc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LCTRL>;
            layers = <1 2>;
        };

        combo_lg {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LGUI>;
            layers = <1 2>;
        };

        combo_short {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp LGUI &kp RGUI &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LSHFT &kp RSHFT>;
            layers = <0>;
        };
    };

    macros {
        mcut: mcut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        mcopy: mcopy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        mpaste: mpaste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        mpnf: mpnf {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        mclip: mclip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LGUI>;
        };

        mzones: mzones {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL &kp LALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL &kp LALT>;
        };

        mpws: mpws {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp PG_UP>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        mnws: mnws {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp PG_DN>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        mpad: mpad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        mnad: mnad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        mescw: mescw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LALT>;
        };

        mteam: mteam {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp M>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

    };



    behaviors {
        moun: mouse_north {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_UP>, <&msc SCRL_UP>;

            mods = <(MOD_LSFT)>;
        };

        mous: mouse_south {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_DOWN>, <&msc SCRL_DOWN>;

            mods = <(MOD_LSFT)>;
        };

        moue: mouse_east {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_RIGHT>, <&msc SCRL_RIGHT>;

            mods = <(MOD_LSFT)>;
        };

        mouw: mouse_west {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_LEFT>, <&msc SCRL_LEFT>;

            mods = <(MOD_LSFT)>;
        };

        escw: espcape_window {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&mescw>;

            mods = <(MOD_LSFT)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp W  &kp G  &kp D  &kp F      &kp B        &kp Q      &kp L       &kp U    &kp O    &kp Y
&kp R  &kp S  &kp T  &kp H      &kp K        &kp J      &kp N       &kp E    &kp A    &kp I
&kp X  &kp C  &kp M  &kp P      &kp V        &kp Z      &kp COMMA   &kp DOT  &kp SQT  &kp SEMI
                     &lt 2 TAB  &kp ENTER    &kp SPACE  &lt 1 BSPC
            >;
        };

        nav_layer {
            bindings = <
&kp EQUAL  &kp N1  &kp N2  &kp N3  &mcopy      &none     &mpws      &kp UP    &mnws      &kp ESC
&kp N0     &kp N4  &kp N5  &kp N6  &mpaste     &kp F2    &kp LEFT   &kp DOWN  &kp RIGHT  &kp PG_UP
&kp MINUS  &kp N7  &kp N8  &kp N9  &kp FSLH    &mzones   &kp LSHFT  &trans    &kp DEL    &kp PG_DN
                           &trans  &trans      &trans    &trans
            >;
        };

        mouse_layer {
            bindings = <
&mteam &kp C_VOL_UP  &kp C_BRI_UP  &mcut   &mcopy     &none      &mpad   &moun  &mnad    &kp ESC
&none  &mkp MB2      &mkp MB1      &mpnf   &mpaste    &kp PSCRN  &mouw   &mous  &moue    &kp PG_UP
&none  &kp C_VOL_DN  &kp C_BRI_DN  &mclip  &none      &none      &none   &none  &kp DEL  &kp PG_DN
                                   &trans  &trans     &trans     &trans
            >;
        };

        util_layer {
            bindings = <
&none  &none  &none  &none       &bt BT_SEL 0    &studio_unlock  &none   &none  &none  &none
&none  &none  &none  &none       &bt BT_SEL 1    &none           &none   &none  &none  &none
&none  &none  &none  &bt BT_CLR  &bt BT_SEL 2    &none           &none   &none  &none  &none
              &trans &trans      &trans          &trans
            >;
        };
    };
};
